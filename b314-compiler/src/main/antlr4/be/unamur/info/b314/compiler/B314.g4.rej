diff a/b314-compiler/src/main/antlr4/be/unamur/info/b314/compiler/B314.g4 b/b314-compiler/src/main/antlr4/be/unamur/info/b314/compiler/B314.g4	(rejected hunks)
@@ -2,14 +3,59 @@
+
 grammar B314;
 
 import B314Words;
 
-root: ID;
-programme: START (vardecl ; | fctdecl)* TSTART (ClauseWhen)* ClauseDefault ;
-ClauseWhen: WHEN ExprD (DLOCAL (vardecl ;)+)? DO (instruction)+ DONE ;
-ClauseDefault: BYDEF (DLOCAL (vardecl ;)+)? DO (instruction)+ DONE ; 
+root : ID;
+
+type : scalar | array  ;
+scalar: BOOLEAN | INTEGER | SQUARE  ;
+array: Scalar CROCHET_OUVERT DIGIT (DIGIT)* (VIRGULE DIGIT (DIGIT)*)? CROCHET_FERME ;
+
+exprD : entier      
+        | LATITUDE | LONGITUDE | GRID_SIZE  
+        |(MAP | RADIO | AMMO | FRUITS | SODA ) COUNT    
+        | LIFE      
+        | TRUE |FALSE   
+        | ENNEMI IS (NORTH | SOUTH | EAST | WEST)  
+        | GRAAL IS (NORTH | SOUTH | EAST | WEST)    
+        | DIRT| ROCK | VINES | ZOMBIE | PLAYER | ENNEMI | MAP | RADIO | AMMO | FRUITS | SODA | NEARBY CROCHET_OUVERT exprD VIRGULE exprD CROCHET_FERME
+        | exprG   
+        | ID PAR_OUVERT (exprD (VIRGULE exprD)*)? PAR_FERME   
+        | PAR_OUVERT exprD PAR_FERME    
+        | NOT exprD 
+        | exprD op=(AND|OR) exprD  
+        | exprD op=(INF | SUP | EGALE) exprD    
+        | exprD op=(PLUS |MOINS) exprD      
+        | exprD op=(MUL|DIV|DIV_ENT) exprD  
+        ;
+        
+exprG : ID | ID CROCHET_OUVERT exprD (VIRGULE exprD)? CROCHET_FERME ; 
+
+entier : (MOINS)? DIGIT(DIGIT)*  ;
+
+instruction : SKIPPPP           
+              | IF exprD THEN (instruction)+ DONE     
+              | IF exprD THEN (instruction)+ ELSE (instruction)+ DONE  
+              | WHILE exprD DO (instruction)+ DONE  
+              | SET exprG TO exprD  
+              | COMPUTE exprD   
+              | NEXT action     
+              ;
+               
+action : MOVE (NORTH | SOUTH | EAST | WEST)     
+        | SHOOT (NORTH | SOUTH | EAST | WEST)   
+        | USE(MAP | RADIO | FRUITS | SODA)      
+        | DO NOTHING   
+        ;
+
+fctDecl : ID AS FUNCTION PAR_OUVERT (varDecl (VIRGULE varDecl)*)?PAR_FERME DEUXPOINTS (scalar | VOID)(DLOCAL(varDecl POINtVIRGULE)+)? DO (instruction)+ DONE    ;
+
+varDecl : ID AS type   ;
+
+programme: START (varDecl POINtVIRGULE | fctDecl)* TSTART (clauseWhen)* clauseDefault  ;
+
+clauseWhen: WHEN exprD (DLOCAL (varDecl POINtVIRGULE)+)? DO (instruction)+ DONE   ;
 
+clauseDefault: BYDEF (DLOCAL (varDecl POINtVIRGULE)+)? DO (instruction)+ DONE  ; 
 
-//Charles
-Type: Scalar | Array;
-Scalar: BOOLEAN | INTEGER | SQUARE;
-Array: Scalar "[" (DIGIT("," DIGIT )+)? "]";
\ No newline at end of file
+commentaire: COMMENTOPEN (POINT Espace*)COMMENTCLOSE   ; 
